{# job_template.txt #}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{job_name}} 
spec:
  template:
    spec:
      restartPolicy: Never 
      containers:
        - name: {{job_name}}
          image: {{path_image}} 
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8880
          env:
            - name: NCCL_SOCKET_IFNAME
              value: eth0
            - name: NCCL_DEBUG
              value: INFO
          command: ["/bin/sh", "-c"]
          args: ["git clone https://github.com/Kovaleski-Research-Lab/meta_atom_rnn.git .;
                  echo cloned repo for arch {{arch}}, sequence {{sequence}} >> {{path_logs}}/logs.log;
                  python3 main.py -config configs/params.yaml -arch {{arch}} -seq_len {{seq_len}} > {{path_logs}}/logs_{{arch}}_{{sequence}}.log "]
          resources:
            limits:
              memory: {{num_mem_lim}} 
              cpu: {{num_cpus}} 
              nvidia.com/gpu: {{num_gpu_lim}}
            requests:
              memory: {{num_mem_req}}
              cpu: {{num_cpus}}
              nvidia.com/gpu: {{num_gpu_req}}
          volumeMounts:
            - name: {{pvc_preprocessed}}
              mountPath: {{preprocessed_path}}
            - name: {{pvc_results}}
              mountPath: {checkpoints_path}}
      volumes:
        - name: {{pvc_preprocessed}}
          persistentVolumeClaim:
            claimName: {{pvc_preprocessed}}
        - name: {{pvc_results}}
          persistentVolumeClaim:
            claimName: {{pvc_results}}

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: nvidia.com/gpu.product
                    operator: In
                    values:
                      - NVIDIA-GeForce-RTX-3090
